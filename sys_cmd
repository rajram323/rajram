### week 1 ###
### w1-lec 1 ###
- pwd
- ls
- ps
- uname

ctrl + l = clear screen
ctrl + d = exit

user@machine:~ ls -a

- ls -a
- ls -l
- man ls
- man 1 ls 
(command option argument)

page section copy from ppt
file system hierarchy copy from ppt

- cd ..
- cd
- cd /
- cd .

each folder contain copy ppt
in /dev
brw - block
crw - char wise

/lib
version file


### w1-lec 2 ###

cp cmd from ppt
- cd - (prev dir)
- cd .
- cd ~  (home dir)

- date
- date -R (RFC5322 standard - for email)
- man date

- cal 
- cal aug 1947
- cal 8 1947
- cal Aug 1947

- ncal
- ncal aug 1947

- free
- free -h  (human readable)

- groups (gphani sudo - super user)

cp ppt
-l details
file types cp ppt blk,char file devices
ls -i inode
permission string

- mkdir level1
- chmod g-W level1
- chmod g-X level1
u-user
g-group
0-others
- chmod o-X level1

- chmod 700 leve1

- touch file1
- cp file1 file2
- mv file2 ..

- mv file2 file3a (mv used for both move file and rename file)
- mv file1 "file one"

-chmod 700 "file one"

- rm "file one"
- man rm
- alias rm="rm -i"


- ls -li
- cd level1
- ls -lia    (same inode no)

- mkdir level2
- cd level2
- ls -lia  (inode no increase)

- whoami
(in root owner not match)
(we are other)
- cd /var/log
(many file not readable by us)
- less alternatives.log
- chmod o+w alternative.log    (permission denied no exec permission)
- less ubuntu-advantqage.log   (permission denied no read permission)
- mkdir level1  (permission denied)
- touch file1   (permission denied) 
- cd unattended-upgrades (permission denied - not able to navigate to that folde)

- cd /usr/bin
- file znew
- less znew

- file zoom  (symbolic link - ZoomLauncher)
- cd /opt/zoom
- file ZoomLauncher (ELF - binary file)
- less ZoomLauncher


- ls -l
- touch Desktop  (change timestamp)
- ls-l

- cp from ppt
  

### w1-lec 3 ###
- cd ///usr///bin

ls cmnd from ppt

- ls l level1
- ls ld level1 (not inside dir)
- ls -ldi level1

- ls level1 ldi
- ls -d level1 -li  (any form work)

- man ls
- ls -l --directory --inode

know file better ppt

- cd/etc
- ls -l profile
- less profile  (q to come out)

- cat profile (can not move back and forth - not good for big file)

- more profile (page by page)

- head profile (first 10 line)
- head -n 5 profile

- tail profile

- man wc
- wc profile
lines words size
- wc -l profile

- man which
- whatis which

- ls -l /usr/bin/less
- ls -l /usr/bin/more

- apropos who
- man who
- which appropos
- whatis who

- which appropos
- which whatis
- ls -l /usr/bin/apropos
(symbolic link to what is - o/p diffrent)

- man -k who (same o/p as appropos)

- help (show reserve kwyword for shell)

- info  (< - shift+,)

- type type (shell bulitin not by os)
- type ls
- which ls
- ls -l /usr/bin/ls  (executable)
- file /usr/bin/ls  (ELF 64-bit from os)

- type help  (bulitin)

- alias ll='ls -l'
- type ll  (alias)
- unalias ll

- alias
- unalias l

multiple argument

- touch file1 file2 file3
- mkdir mydir
- cp file1 mydir
- cp file1 file2  (ask permission)

- rmdir level1 (non empty dir can not be removed)
- rmdir -r mydir  (forcefully removed)

 - cp mydir mydir2
(mydir has two files - mydir is not created - after cmd mydor will be created with the two files of mydir)

- mv mydir mydir3 (it only rename the dir there is no dir name mydir3)

links

- touch file1
- ln -s file1 file2
(separate i node)
 - ln file1 file3
(same inode and hard link count 2 - both file1,file3 2 count)

file size
- stat znew
- du znew
- du -h znew

in-memory filesystem
/proc
/sys

- cd /
- ls -l
(they are in memmory not in hard disk)
proc - older system from kernet 2.6 \sys is used
sys -
- cd proc
(showing 0 byte)
- less cpuinfo
- cat cpuinfo
- cat version
- uname -a
- cat meminfo
- frre
- free h
- cat partition
- df
- df -h

(kcore shows huge no - theoritacally how much virtual memory it can handle)

- cd sys/bus/usb/devices/1-1
- less manufacturer
- less product

### week 5 ###
### w1-lec 3 ### https://www.youtube.com/watch?v=R9vnc8AdVUo&t=1s ###
  /* all varibles show */
- printenv
- env
- echo ${!HI*}         /* all varibles that start with Hi */
       HISTCMD HISTCONTROL HISTFILE HISTFILESIZE HISTSIZE

- mydate=`date`       /* store mydate in mydate variable */
- echo $mydate
        Fri Mar 7 03:31:46 UTC 2025
- echo ${#mydate}    /* # - count no of character in myvar */
        28
- echo $(myvar)      /* if variable is not defines then return 0 */
        0
- myvar=abcdefgh12345678  
- echo ${myvar:3;4}      /* skip first 3 char then 4 char */
        defg
- echo ${myvar:-3:4}      /* from right 3 char from ther 4 char */
        678
- echo ${myvar:-3:2}
      67
- echo ${mydate:0:6}
      Sunday

- date +"%d %B %Y"
      09 January 2022
- echo ${mydate:6:10}
      09 January 2022

- myvar=MyFileName.SomethingElse.jpeg
- echo ${myvar#*.}
     SomethingElse.jpeg 
- echo ${myvar##*.}  
      .jpeg
- echo ${myvar%.*}
      MyFileName.SomethingElse
- echo ${myvar%%.*}
      MyFileName
- echo ${myvar%%.*}.${myvar##*.} 
      MyFileName.jpeg

/* Replace character */
myvar=MyFileName.SomethingElse.jpeg

-  echo $myvar
MyFileName.SomethingElse.jpeg       
-  echo ${myvar/e/E}                  /* change first occurence of e */  
MyFilEName.SomethingElse.jpeg
-  echo ${myvar//e/E}                /* change all occurence of e */
MyFilENamE.SomEthingElsE.jpEg
-  echo ${myvar/#M/m}                /* change if first letter is M */
myFileName.SomethingElse.jpeg
-  echo ${myvar/%g/G}                /* change if last letter is g */
MyFileName.SomethingElse.jpeG
-  echo ${myvar/%jpeg/jpg}
MyFileName.SomethingElse.jpg

- myvar=MyjpegFile.Something.jpeg
- myvar1= 'echo${myvar//jpeg/jpg}`
- echo $myvar1
        MyjpgFile.Something.jpg

-  mydate=`date`
-  echo $mydate
        Sun Mar 9 12:17:29 UTC 2025
-  echo ${mydate,}                   /* , first char change to small */
        sun Mar 9 12:17:29 UTC 2025
-  echo ${mydate,,}                  /* ,, all char change to small */
        sun mar 9 12:17:29 utc 2025
-  myvar=hello                       
-  echo ${myvar^}                    /* ^ first char change to capital */ 
        Hello
-  echo ${myvar^^}                  /* ^^ first char change to capital */ 
        HELLO

-  declare -i mynum                /* only store integers */ 
-  mynum=10
-  echo ${mynum}
        10
-  mynum=hello
-  echo ${mynum}                  /* if assign to other it will store 0 */ 
        0
-  declare -l myvar              /* only store lower case */
-  myvar=hello
-  echo ${myvar}
        hello
-  myvar=ZZDF
-  echo ${myvar}                /* if uppercase stored then it turns into lower case */
      zzdf
-  declare -u MYVAR            /* only store upper case */
-  MYVAR=helllo
-  echo ${myvar}
        zzdf
-  echo ${MYVAR}              
        HELLLO
-  MYVAR=77
-  echo ${MYVAR}
        77
-  MYVAR=77ui                  /* it can store also intiger apart from small case letter */
-  echo ${MYVAR}
        77UI







