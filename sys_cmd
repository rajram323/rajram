### week 1 ###
### w1-lec 1 ###
- pwd
- ls
- ps
- uname

ctrl + l = clear screen
ctrl + d = exit

user@machine:~ ls -a

- ls -a
- ls -l
- man ls
- man 1 ls 
(command option argument)

page section copy from ppt
file system hierarchy copy from ppt

- cd ..
- cd
- cd /
- cd .

each folder contain copy ppt
in /dev
brw - block
crw - char wise

/lib
version file


### w1-lec 2 ###

cp cmd from ppt
- cd - (prev dir)
- cd .
- cd ~  (home dir)

- date
- date -R (RFC5322 standard - for email)
- man date

- cal 
- cal aug 1947
- cal 8 1947
- cal Aug 1947

- ncal
- ncal aug 1947

- free
- free -h  (human readable)

- groups (gphani sudo - super user)

cp ppt
-l details
file types cp ppt blk,char file devices
ls -i inode
permission string

- mkdir level1
- chmod g-W level1
- chmod g-X level1
u-user
g-group
0-others
- chmod o-X level1

- chmod 700 leve1

- touch file1
- cp file1 file2
- mv file2 ..

- mv file2 file3a (mv used for both move file and rename file)
- mv file1 "file one"

-chmod 700 "file one"

- rm "file one"
- man rm
- alias rm="rm -i"


- ls -li
- cd level1
- ls -lia    (same inode no)

- mkdir level2
- cd level2
- ls -lia  (inode no increase)

- whoami
(in root owner not match)
(we are other)
- cd /var/log
(many file not readable by us)
- less alternatives.log
- chmod o+w alternative.log    (permission denied no exec permission)
- less ubuntu-advantqage.log   (permission denied no read permission)
- mkdir level1  (permission denied)
- touch file1   (permission denied) 
- cd unattended-upgrades (permission denied - not able to navigate to that folde)

- cd /usr/bin
- file znew
- less znew

- file zoom  (symbolic link - ZoomLauncher)
- cd /opt/zoom
- file ZoomLauncher (ELF - binary file)
- less ZoomLauncher


- ls -l
- touch Desktop  (change timestamp)
- ls-l

- cp from ppt
  

### w1-lec 3 ###
- cd ///usr///bin

ls cmnd from ppt

- ls l level1
- ls ld level1 (not inside dir)
- ls -ldi level1

- ls level1 ldi
- ls -d level1 -li  (any form work)

- man ls
- ls -l --directory --inode

know file better ppt

- cd/etc
- ls -l profile
- less profile  (q to come out)

- cat profile (can not move back and forth - not good for big file)

- more profile (page by page)

- head profile (first 10 line)
- head -n 5 profile

- tail profile

- man wc
- wc profile
lines words size
- wc -l profile

- man which
- whatis which

- ls -l /usr/bin/less
- ls -l /usr/bin/more

- apropos who
- man who
- which appropos
- whatis who

- which appropos
- which whatis
- ls -l /usr/bin/apropos
(symbolic link to what is - o/p diffrent)

- man -k who (same o/p as appropos)

- help (show reserve kwyword for shell)

- info  (< - shift+,)

- type type (shell bulitin not by os)
- type ls
- which ls
- ls -l /usr/bin/ls  (executable)
- file /usr/bin/ls  (ELF 64-bit from os)

- type help  (bulitin)

- alias ll='ls -l'
- type ll  (alias)
- unalias ll

- alias
- unalias l

multiple argument

- touch file1 file2 file3
- mkdir mydir
- cp file1 mydir
- cp file1 file2  (ask permission)

- rmdir level1 (non empty dir can not be removed)
- rmdir -r mydir  (forcefully removed)

 - cp mydir mydir2
(mydir has two files - mydir is not created - after cmd mydor will be created with the two files of mydir)

- mv mydir mydir3 (it only rename the dir there is no dir name mydir3)

links

- touch file1
- ln -s file1 file2
(separate i node)
 - ln file1 file3
(same inode and hard link count 2 - both file1,file3 2 count)

file size
- stat znew
- du znew
- du -h znew

in-memory filesystem
/proc
/sys

- cd /
- ls -l
(they are in memmory not in hard disk)
proc - older system from kernet 2.6 \sys is used
sys -
- cd proc
(showing 0 byte)
- less cpuinfo
- cat cpuinfo
- cat version
- uname -a
- cat meminfo
- frre
- free h
- cat partition
- df
- df -h

(kcore shows huge no - theoritacally how much virtual memory it can handle)

- cd sys/bus/usb/devices/1-1
- less manufacturer
- less product

### week 3 ###
### w3-lec 1 ### https://www.youtube.com/watch?v=Lcx9UsS7y8Y ###

ppt -  executing multiple commands
 
-  ls; date; wc -l /etc/profile
	fields.txt
	Mon Mar 17 17:17:24 UTC 2025
	27 /etc/profile
-  ls /blah; date; wc -l /etc/profile
	ls: cannot access '/blah': No such file or directory
	Mon Mar 17 17:17:39 UTC 2025
	27 /etc/profile
-  (ls ; date; wc -l /etc/profile)
	fields.txt
	Mon Mar 17 17:18:12 UTC 2025
	27 /etc/profile
-  echo $BASH_SUBSHELL
	0
-  (echo $BASH_SUBSHELL)
	1

-  (ls; date; echo $BASH_SUBSHELL)
	Mon Mar 17 17:22:31 UTC 2025
	1

-  (ls; (date; echo $BASH_SUBSHELL))
	Mon Mar 17 17:25:08 UTC 2025
	2
-  (ls; echo $BASH_SUBSHELL; (date; echo $BASH_SUBSHELL))
	1
	Mon Mar 17 17:25:40 UTC 2025
	2
-  ls; date;
	Mon Mar 17 17:28:37 UTC 2025
-  ls /blah && date
	ls: cannot access '/blah': No such file or directory
-  ls /blah || date
	ls: cannot access '/blah': No such file or directory
	Mon Mar 17 17:29:07 UTC 2025
-  ls || date
	ls not shown run in ubuntu

-  ls && date && wc -l /etc/profile
	Tue Mar 18 01:31:19 UTC 2025
	27 /etc/profile
-  ls /blah && date && wc -l /etc/profile
	ls: cannot access '/blah': No such file or directory
-  ls && date -Q && wc -l /etc/profile
	date: invalid option -- 'Q'
	Try 'date --help' for more information.
	ls should be executed try in ubuntu

ppt - file descritors

ppt - > file1 
-  ls /usr/bin
	['                                   mt-gnu
	aa-enabled                           mv
	aa-exec                              namei
	aa-features-abi                      nawk
	addpart                              nc
	
-  ls -1 /usr/bin
	'['
	aa-enabled
	aa-exec
	aa-features-abi	
-  ls -1 /usr/bin > file1
-  ls -l
	total 8
	-rw-rw-r-- 1 ubuntu ubuntu 7352 Mar 18 01:42 file1
-  cat file1
	[
	aa-enabled
	aa-exec
	aa-features-abi

- less file1   (space-page by page, q- come out)

-  ls -l /blah > file1
	ls: cannot access '/blah': No such file or directory
-  ls
	file1
-  ls -l	(file overwritten alwayd =s give unique name)
	total 0
	-rw-rw-r-- 1 ubuntu ubuntu 0 Mar 18 01:48 file1

-  hwinfo
	bash: hwinfo: command not found try in ubuntu

-  hwinfo > file1.txt
	bash: hwinfo: command not found
-  ls -al				(see permission - if not write permission then > command will not execute)
	total 24
	drwxr-x--- 2 ubuntu ubuntu 4096 Mar 18 01:52 .
	drwxr-xr-x 3 root   root   4096 Mar 16 07:43 ..
	-rw-r--r-- 1 ubuntu ubuntu  220 Jan  6  2022 .bash_logout
	-rw-r--r-- 1 ubuntu ubuntu 3771 Jan  6  2022 .bashrc
	-rw-r--r-- 1 root   root      0 Mar 17 06:33 .hushlogin
	-rw------- 1 ubuntu ubuntu   20 Mar 18 01:46 .lesshst
	-rw-r--r-- 1 ubuntu ubuntu  807 Jan  6  2022 .profile
	-rw-rw-r-- 1 ubuntu ubuntu    0 Mar 18 01:52 file1
	-rw-rw-r-- 1 ubuntu ubuntu    0 Mar 18 01:52 file1.txt
-  whoami
	ubuntu
-  cd /usr
- /usr$ ls > file1
	bash: file1: Permission denied
- /usr$ 
- cat > file1
	This is the first text file I am creating on command line.
	We could use this feature to create text files onthe command line.
	You could come out using control+D option.
- cat file1
	This is the first text file I am creating on command line.
	We could use this feature to create text files onthe command line.
	You could come out using control+D option.
-  cat
	This is the first line.
	This is the first line.
	You can see that the command processes line by line.
	You can see that the command processes line by line.
	finish up by sending EQF using control+D to close.
	finish up by sending EQF using control+D to close. 

-  ls
	file1
-  rm file1
-  ls
-  date >> file1	(>> contents appended in file)
-  date >> file1
-  date >> file1
-  cat file1
	Tue Mar 18 02:07:45 UTC 2025
	Tue Mar 18 02:07:48 UTC 2025
	Tue Mar 18 02:07:49 UTC 2025

-  date >> file2; wc -l /etc/profile >> file2; file /usr/bin/znew >> file2;
-  cat file2
	Tue Mar 18 02:11:05 UTC 2025
	27 /etc/profile
	/usr/bin/znew: POSIX shell script, ASCII text executable
-  date >> file2; wc -l /etc/profile > file2; file /usr/bin/znew >> file2; ( middle is > so it update file)
-  cat file2
	27 /etc/profile
	/usr/bin/znew: POSIX shell script, ASCII text executable

-  cat >> file1
	This is a way to create a new file and append text to it.
	First attempt to add text to the file caleed file1.
	I come out using control+D.-  
-  cat >> file1
	This is my second attempt to append text to the file called file1.
	We can inspect the content using cat or less or more commands.
	I come out using control+D.
-  cat >> file1
	This is the third time attemt to append content to the file called file1.
-  cat file1
	This is a way to create a new file and append text to it.
	First attempt to add text to the file caleed file1.
	I come out using control+D.This is my second attempt to append text to the file called file1.
	We can inspect the content using cat or less or more commands.
	I come out using control+D.
	This is the third time attemt to append content to the file called file1.


### week 3 ###
### w3-lec 2 ### https://www.youtube.com/watch?v=BBh69kH_G_Y ###
ppt - 2> error to file 1

-  ls $HOME
-  ls $HOME /blah
	ls: cannot access '/blah': No such file or directory
	/home/ubuntu:
-  ls $HOME /blah 2> error.txt
	/home/ubuntu:
	error.txt
-  ls -l
	total 4
	-rw-rw-r-- 1 ubuntu ubuntu 53 Mar 18 02:43 error.txt
-  cat error.txt
	ls: cannot access '/blah': No such file or directory

-  ls $HOME /blah > output.txt 2> error.txt
-  ls -l
	total 8
	-rw-rw-r-- 1 ubuntu ubuntu 53 Mar 18 02:48 error.txt
	-rw-rw-r-- 1 ubuntu ubuntu 35 Mar 18 02:48 output.txt
-  cat error.txt
	ls: cannot access '/blah': No such file or directory
-  cat output.txt
	/home/ubuntu:
	error.txt
	output.txt

-  ls -R /etc > output.txt 2> error.txt 		(recursively)
-  ls -l
	total 28
	-rw-rw-r-- 1 ubuntu ubuntu    64 Mar 18 02:51 error.txt
	-rw-rw-r-- 1 ubuntu ubuntu 20734 Mar 18 02:51 output.txt
- less output.txt

ppt  - <
- cat error.txt
- cat < error.txt

-  wc error.txt
	1  7 64 error.txt
-  wc /etc/profile
	27  97 582 /etc/profile
-  cat error.txt
	ls: cannot open directory '/etc/ssl/private': Permission denied
-  wc < error.txt
	1  7 64
ppt > > >

-  ls $HOME /blah
	ls: cannot access '/blah': No such file or directory
	/home/ubuntu:
-  ls $HOME /blah > file1
	ls: cannot access '/blah': No such file or directory
-  ls $HOME /blah > file1 2> file1
-  cat file1
	/home/ubuntu:
	file1
	blah': No such file or directory
ppt - | pipe
-  ls /usr/bin > file1
-  wc -l file1
	743 file1
-  less file1
-  ls /usr/bin | wc -l
	743

- ls /usr/bin | less
ppt - | >
- ls /usr/bin | wc -l > file1
- more file1
	743

ppt - /dev/null
ppt - /dev/null		(to clear screen)

-  ls $HOME /blah
	ls: cannot access '/blah': No such file or directory
	/home/ubuntu:
	file1
-  ls $HOME /blah > file1
	ls: cannot access '/blah': No such file or directory
-  ls $HOME /blah > file1 2> /dev/null
-  cat file1
	/home/ubuntu:
	file1
-  ls -R /etc > file 2> /dev/null
-  less file1

ppt - | tee

- help tee
-  ls $HOME | tee file1
	bin
	Desktop
	Downloads	
-  cat file1
	bin
	Desktop
	Downloads
-  ls $HOME | tee file1 file2	(can write to two file)
- diff file1 file2 		(compare two file line by line)

- ls $HOME | tee file1 file2 | wc -l 		(word count of single file )
- ls $HOME /blah 2> /dev/null | tee file1 flee2 | wc -l    (the error goes to null file)

### week 3 ###
### w3-lec 3 ### https://www.youtube.com/watch?v=OAEVYgH1IMM&t=1s ###
software management

ppt - need for a package manager
ppt - package types

-  lsb_release -a
	No LSB modules are available.
	Distributor ID: Ubuntu
	Description:    Ubuntu 22.04.5 LTS
	Release:        22.04
	Codename:       jammy
ppt - architecture
-  uname -a
	Linux tryit 6.13.7-zabbly+ #ubuntu22.04 SMP PREEMPT_DYNAMIC Fri Mar 14 20:19:45 UTC 2025 x86_64 x86_64 x86_64 GNU/Linux

ppt - tools
ppt - inquiring package db
-  which apt-cache
	/usr/bin/apt-cache
-  which apt-get
	/usr/bin/apt-get
-  apt-cahe search fortune
	run in ubuntu
-  apt-cahe search nmap
	run in ubuntu	
-  apt-cahe search wget
	run in ubuntu
- apt-cache pkgnames
	run in ubuntu
- apt-cache pkgnames | less		(booktalk or booktube)
	run in ubuntu
- apt-cahe pkgnames | sort | less
	run in ubuntu
-  apt-cache pkgnames nm
	mh
	ml
	map-common
	mapsi4
	m-tray
	mzmail
	map
	mon
	mrpflash
	m-tray-l10n
- apt-cache show nmap
	Package: nmap
	Architecture: amd64
	Version: 7.91+dfsg1+really7.80+dfsg1-2ubuntu0.1
	Priority: extra
	Section: universe/net
	Origin: Ubuntu	
	Filename: pool/universe/n/nmap/nmap_7.91+dfsg1+really7.80+dfsg1-2ubuntu0.1_amd64.deb
	
ppt - package priorities

- apt-cache show wget
	ubuntu@tryit:~$ apt-cache show wget
	Package: wget
	Architecture: amd64
	Version: 1.21.2-2ubuntu1.1
	Multi-Arch: foreign
	Priority: standard
	Section: web
	Origin: Ubuntu

-  apt-cache show fortunes
	Package: fortunes
	Architecture: all
	Version: 1:1.99.1-7.1
	Priority: optional
	Section: universe/games
	Source: fortune-mod
	Origin: Ubuntu
ppt - package sections

ppt - checksun

-  echo "This is edited by Phanikumar" > file1.txt
-  ls -l
	total 4
-rw-rw-r-- 1 ubuntu ubuntu 29 Mar 20 10:02 file1.txt
-  echo "This is edited by Pnanikumar" > file2.txt
-  cat file1.txt file2.txt
	This is edited by Phanikumar
	This is edited by Pnanikumar
-  md5sum file1.txt
	8033b5b8079e55cd5cb28572729ba689  file1.txt
-  md5sum file2.txt
	ab91ed3d81364803654e8df50672b9c7  file2.txt
-  sha1sum file1.txt
	7ad309e9386cb11293630e57ed85b5eddae5a445  file1.txt
-  sha1sum file2.txt
	d3dacd6b8ba9b40170323dd4740493869982365a  file2.txt
-  sha256sum file1.txt
	554c894428dab7e99865608ec9f31c6683044df818d4ec321f5290116d667e9f  file1.txt
-  sha256sum file2.txt
	027ffd1beaa36f27a9b88d7739f97417b29f5e166260c6c4d7419add80be8b30  file2.txt

### week 3 ###
### w3-lec 4 ### https://www.youtube.com/watch?v=1y85iTaqq8Y ###
 -  echo $USER
	guest
-  whoami
	guest
-  sudo cat /etc/sudoers
    guest is not in the sudoers file. This incident will be reported.

-  sudo /etc/sudoers
	sudo: /etc/sudoers: command not found
-  sudo cat /etc/sudoers
	#
	# This file MUST be edited with the 'visudo' command as root.
	#
	# Please consider adding local content in /etc/sudoers.d/ instead of
	# directly modifying this file.
	#
	# See the man page for details on how to write a sudoers file.
	#
	Defaults        env_reset
	Defaults        mail_badpass
	Defaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"

ppt - /etc/apt







### week 3 ###
### w3-lec 5 ### https://www.youtube.com/watch?v=2aThmDRvSWU ###
Linux process management

-  coproc sleep 10
	[1] 111351
-  pwd
	/home/cg/root/67dc36e737aaa
-  ls
	fontlist-v330.json
-  ls
	fontlist-v330.json
	[1]+  Done                    coproc COPROC sleep 10

-  coproc sleep 30
	[1] 115153
-  ps --forest
	PID TTY          TIME CMD
	114924 pts/269  00:00:00 bash
	115153 pts/269  00:00:00  \_ sleep
	115165 pts/269  00:00:00  \_ ps

-  man coproc
	This system has been minimized by removing packages and content that are
	not required on a system that users do not log 
	into.

-  type coproc
	coproc is a shell keyword
-  -  help coproc
	coproc: coproc [NAME] command [redirections]
    Create a coprocess named NAME.
    
    Execute COMMAND asynchronously, with the standard output and standard
    input of the command connected via a pipe to file descriptors assigned
    to indices 0 and 1 of an array variable NAME in the executing shell.
    The default NAME is "COPROC".
    
    Exit Status:
    The coproc command returns an exit status of 0.

-  coproc sleep 30
	[1] 118917
-  ps --forest
	PID TTY          TIME CMD
	118759 pts/420  00:00:00 bash
	118917 pts/420  00:00:00  \_ sleep
	118924 pts/420  00:00:00  \_ ps
-  kill -9 118917

-  sleep 30 &
	[1] 120890
-  ls
	fontlist-v330.json
-  sleep 30 &
	[1] 121464
-  ls
	fontlist-v330.json
-  ps
	PID TTY          TIME CMD
	120472 pts/196  00:00:00 bash
	121464 pts/196  00:00:00 sleep
	121477 pts/196  00:00:00 ps
-  sleep 30 &
	[1] 122915
-  fg
	sleep 30


-  coproc sleep 30
	[1] 124897
-  coproc sleep 45
	bash: warning: execute_coproc: coproc [124897:COPROC] still exists
	[2] 124981
-  jobs
	[1]-  Running                 coproc COPROC sleep 30 &
	[2]+  Running                 coproc COPROC sleep 45 &








 


### week 4 ###
### w4-lec 1 ### https://www.youtube.com/watch?v=1y85iTaqq8Y ###

ppt - POSIX standard
ppt - Regex
ppt - why regex
ppt - usage
ppt - special characters
ppt - special char
ppt - char class
ppt - backreferences
ppt - operator sequence
ppt - ere operator precedence


cat names.txt			/* create file */
MM22B901 Mary Manickam
ED22B902 Raman Singh
ME22B903 Umair Ahmand
CS22B904 Charles M. Sagayam
EE22B906 Anu K. Jain
NA22B906 Anupama Sridhar
PH22B907 Vel Sankharan


- grep Raman names.txt			/* search text in file */	
	ED22B902 Raman Singh
- grep 'Raman' names.txt		/* good habit */
	ED22B902 Raman Singh
- cat names.txt | grep 'ai'		/* search output from command */
	MM22B901 Mary Manickam


-  cat names.txt | grep 'S.n'
	ED22B902 Raman Singh
	PH22B907 Vel Sankharan
-  cat names.txt | grep '.am'
	MM22B901 Mary Manickam
	ED22B902 Raman Singh
	CS22B904 Charles M. Sagayam
	NA22B906 Anupama Sridhar
-  cat names.txt | grep '.am$'
	MM22B901 Mary Manickam
	CS22B904 Charles M. Sagayam
-  cat names.txt | grep '\.'
	CS22B904 Charles M. Sagayam
	EE22B906 Anu K. Jain
-  cat names.txt | grep '.\.'
	CS22B904 Charles M. Sagayam
	EE22B906 Anu K. Jain
-  cat names.txt | grep '^M'
	MM22B901 Mary Manickam
	ME22B903 Umair Ahmand
-  cat names.txt | grep '^e'
-  cat names.txt | grep -i '^e'
	ED22B902 Raman Singh
	EE22B906 Anu K. Jain

/* --- word boundar --- */

-  cat names.txt | grep -i 'am'
	MM22B901 Mary Manickam
	ED22B902 Raman Singh
	CS22B904 Charles M. Sagayam
	NA22B906 Anupama Sridhar

-  cat names.txt | grep -i 'an\b'
	ED22B902 Raman Singh
	PH22B907 Vel Sankharan
-  cat names.txt | grep -i 'an$'
	PH22B907 Vel Sankharan


/* --- [] used for option --- */

-  cat names.txt | grep -i 'M[ME]'
	MM22B901 Mary Manickam
	ME22B903 Umair Ahmand
-  cat names.txt | grep -i '[ME]E'
	ME22B903 Umair Ahmand
	EE22B906 Anu K. Jain
-  cat names.txt | grep -i 'S.*[mn]'
	ED22B902 Raman Singh
	CS22B904 Charles M. Sagayam
	PH22B907 Vel Sankharan
-  cat names.txt | grep -i '\bS.*[mn]'		/* see colour */
	ED22B902 Raman Singh
	CS22B904 Charles M. Sagayam
	PH22B907 Vel Sankharan

-  cat names.txt | grep -i '[aeiou]'
	MM22B901 Mary Manickam
	ED22B902 Raman Singh
	ME22B903 Umair Ahmand
	CS22B904 Charles M. Sagayam
	EE22B906 Anu K. Jain
	NA22B906 Anupama Sridhar
	PH22B907 Vel Sankharan
-  cat names.txt | grep -i '[aeiou][aeiou]'
	ME22B903 Umair Ahmand
	EE22B906 Anu K. Jain


 -  cat names.txt | grep -i 'B90[5-7]'
	EE22B906 Anu K. Jain
	NA22B906 Anupama Sridhar
	PH22B907 Vel Sankharan

-  cat names.txt | grep '[M-Z][aeiou]'
	MM22B901 Mary Manickam
	ED22B902 Raman Singh
	CS22B904 Charles M. Sagayam
	PH22B907 Vel Sankharan


-  cat names.txt | grep 'B90[5-7]'
	EE22B906 Anu K. Jain
	NA22B906 Anupama Sridhar
	PH22B907 Vel Sankharan
-  cat names.txt | grep 'B90[^5-7]'
	MM22B901 Mary Manickam
	ED22B902 Raman Singh
	ME22B903 Umair Ahmand
	CS22B904 Charles M. Sagayam


/* --- pattern match no of times --- */
-  cat names.txt | grep 'M\{2\}'
	MM22B901 Mary Manickam
-  cat names.txt | grep 'M\{1,2\}'
	MM22B901 Mary Manickam
	ME22B903 Umair Ahmand
	CS22B904 Charles M. Sagayam


-  cat names.txt | grep '\(ma\)'
	ED22B902 Raman Singh
	ME22B903 Umair Ahmand
	NA22B906 Anupama Sridhar
-  cat names.txt | grep '\(ma\).*\1'
	ME22B903 Umair Ahmand
-  cat names.txt | grep '\(.a\).*\1'
	MM22B901 Mary Manickam
	ME22B903 Umair Ahmand
-  cat names.txt | grep '\(a.\).*\1'
	PH22B907 Vel Sankharan
	
-  cat names.txt | grep '\(a.\)\{3\}'
	CS22B904 Charles M. Sagayam
-  cat names.txt | grep '\(a.\)\{2\}'
	ED22B902 Raman Singh
	CS22B904 Charles M. Sagayam
	NA22B906 Anupama Sridhar
	PH22B907 Vel Sankharan
	
-  cat names.txt | grep '\(a.\)\{2,3\}'
	ED22B902 Raman Singh
	CS22B904 Charles M. Sagayam
	NA22B906 Anupama Sridhar
	PH22B907 Vel Sankharan


/* extended re */
- cat names.txt | egrep 'M+'
	MM22B901 Mary Manickam
	ME22B903 Umair Ahmand
	CS22B904 Charles M. Sagayam
- cat names.txt | egrep '^M+'
	MM22B901 Mary Manickam
	ME22B903 Umair Ahmand
- cat names.txt | egrep '^M*'
	MM22B901 Mary Manickam
	ED22B902 Raman Singh
	ME22B903 Umair Ahmand
	CS22B904 Charles M. Sagayam
	EE22B906 Anu K. Jain
	NA22B906 Anupama Sridhar
	PH22B907 Vel Sankharan
- cat names.txt | egrep '^M*a'
- cat names.txt | egrep 'M*a'
	MM22B901 Mary Manickam
	ED22B902 Raman Singh
	ME22B903 Umair Ahmand
	CS22B904 Charles M. Sagayam
	EE22B906 Anu K. Jain
	NA22B906 Anupama Sridhar
	PH22B907 Vel Sankharan

-  cat names.txt | egrep 'M.*a'
	MM22B901 Mary Manickam
	ME22B903 Umair Ahmand
	CS22B904 Charles M. Sagayam

-  cat names.txt | egrep '(ma)+'
	ED22B902 Raman Singh
	ME22B903 Umair Ahmand
	NA22B906 Anupama Sridhar
-  cat names.txt | egrep '(ma)*'
	MM22B901 Mary Manickam
	ED22B902 Raman Singh
	ME22B903 Umair Ahmand
	CS22B904 Charles M. Sagayam
	EE22B906 Anu K. Jain
	NA22B906 Anupama Sridhar
	PH22B907 Vel Sankharan

-  cat names.txt | egrep '(ED|ME)'	/* ED or ME should match */
	ED22B902 Raman Singh
	ME22B903 Umair Ahmand
-  cat names.txt | egrep '(Anu|Raman)'	/* Anu or Raman should match */
	ED22B902 Raman Singh
	EE22B906 Anu K. Jain
	NA22B906 Anupama Sridhar
### week 4 ###
### w4-lec 2 ### https://www.youtube.com/watch?v=XQUJPRc-7zA&t=2s ###

- man dpkg-query	/* list packages */
- dpkg-query -W -f'${Section} ${binary:Package}\n'	 /*-W ifo about pkg   ${binary:Package}- name of pakg */
	admin adduser
	admin apparmor
	admin apt

-  dpkg-query -W -f'${Section} ${binary:Package}\n' | egrep ' .{4}'	/* 4 length */
		admin adduser
		admin apparmor
		admin apt-utils
		utils attr
		admin base-files
- dpkg-query -W -f'${Section} ${binary:Package}\n' | egrep ' .{4}$'	/* 4 length end of line */
	utils attr
	shells bash
	utils cpio
	shells dash


-  dpkg-query -W -f'${Section} ${binary:Package}\n' | egrep '.{4}'	/* without space match from starting */
	admin adduser
	admin apparmor
	admin apt

-  dpkg-query -W -f'${Section} ${binary:Package}\n' | egrep ' g.{1,5}$'		/* start with ' g' and 1 or 5 long in end */
	devel gcc
	devel gcc-11
	devel gcc-12

- dpkg-query -W -f'${Section} ${binary:Package}\n' | egrep 'math' 		/* math packages  */
- dpkg-query -W -f'${Section} ${binary:Package}\n' | egrep '^math' 		/* only math section math packages  */
- dpkg-query -W -f'${Section} ${binary:Package}\n' | egrep ' kd.*$'            /* kd packages with end word start with kd  */                                 

- cat chartypes.txt
hello : alphabetical stuff :5g
l : start lower end upper : H
L : start upper end lower : h
5g : alpha numeric stuff : 42
42 : solution yo everything : 
 : start with control c end with dot : .

, : start with coma end with equals : =
  : start with blank end with control char :

-  cat chartypes.txt | grep '[[:alpha:]]'
	hello : alphabetical stuff :5g
	l : start lower end upper : H
	L : start upper end lower : h
	5g : alpha numeric stuff : 42
	42 : solution yo everything :
	: start with control c end with dot : .

	, : start with coma end with equals : =
	: start with blank end with control char :

-  cat chartypes.txt | grep '[[:alnum:]]'	/* all same file */
	hello : alphabetical stuff :5g
	l : start lower end upper : H
	L : start upper end lower : h
	5g : alpha numeric stuff : 42
	42 : solution yo everything :
	: start with control c end with dot : .
	, : start with coma end with equals : =
	: start with blank end with control char :

-  cat chartypes.txt | grep '^[[:alnum:]]'
	hello : alphabetical stuff :5g
	l : start lower end upper : H
	L : start upper end lower : h
	5g : alpha numeric stuff : 42
	42 : solution yo everything :
ubuntu@tryit:~$ cat chartypes.txt | grep '[[:alnum:]]$'
	hello : alphabetical stuff :5g
	l : start lower end upper : H
	L : start upper end lower : h
	5g : alpha numeric stuff : 42

-  cat chartypes.txt | grep '[[:digit:]]'
	hello : alphabetical stuff :5g
	5g : alpha numeric stuff : 42
	42 : solution yo everything :
-  cat chartypes.txt | grep '^[[:digit:]]'
	5g : alpha numeric stuff : 42
	42 : solution yo everything :
-  cat chartypes.txt | grep '[[:digit:]]$'
	5g : alpha numeric stuff : 42

-  cat chartypes.txt | grep '[[:cntrl:]]'
-  cat chartypes.txt | grep -v '[[:cntrl:]]'
	
-  cat chartypes.txt | grep '[[:punct:]]'
	hello : alphabetical stuff :5g
	l : start lower end upper : H
	L : start upper end lower : h
	5g : alpha numeric stuff : 42
	42 : solution yo everything :
	: start with control c end with dot : .
	, : start with coma end with equals : =
	: start with blank end with control char :
-  cat chartypes.txt | grep '^[[:punct:]]'
	, : start with coma end with equals : =
-  cat chartypes.txt | grep '[[:punct:]]$'
	42 : solution yo everything :
	: start with control c end with dot : .
	, : start with coma end with equals : =
	: start with blank end with control char :
-  cat chartypes.txt | grep '[[:lower:]]'
	hello : alphabetical stuff :5g
	l : start lower end upper : H
	L : start upper end lower : h
	5g : alpha numeric stuff : 42
	42 : solution yo everything :
	: start with control c end with dot : .
	, : start with coma end with equals : =
	: start with blank end with control char :
	-  cat chartypes.txt | grep '^[[:lower:]]'
	hello : alphabetical stuff :5g
	l : start lower end upper : H
-  cat chartypes.txt | grep '[[:lower:]]$'
	hello : alphabetical stuff :5g
	L : start upper end lower : h

-  cat chartypes.txt | grep '[[:upper:]]'
	l : start lower end upper : H
	L : start upper end lower : h
-  cat chartypes.txt | grep '^[[:upper:]]'
	L : start upper end lower : h
-  cat chartypes.txt | grep '[[:upper:]]$'
	l : start lower end upper : H

-  cat chartypes.txt | grep '[[:print:]]'
	hello : alphabetical stuff :5g
	        l : start lower end upper : H
	        L : start upper end lower : h
	        5g : alpha numeric stuff : 42
	        42 : solution yo everything :
	        : start with control c end with dot : .
	        , : start with coma end with equals : =
	        : start with blank end with control char :
-  cat chartypes.txt | grep '^[[:print:]]'
	hello : alphabetical stuff :5g
-  cat chartypes.txt | grep '[[:print:]]$'
	hello : alphabetical stuff :5g
	        l : start lower end upper : H
	        L : start upper end lower : h
	        5g : alpha numeric stuff : 42
	        42 : solution yo everything :
	        : start with control c end with dot : .
	        , : start with coma end with equals : =
	        : start with blank end with control char :

-  cat chartypes.txt | grep '[[:blank:]]'
	hello : alphabetical stuff :5g
			l : start lower end upper : H
			L : start upper end lower : h
			5g : alpha numeric stuff : 42
			42 : solution yo everything :
			: start with control c end with dot : .
			, : start with coma end with equals : =
			: start with blank end with control char :
-  cat chartypes.txt | grep '^[[:blank:]]'
        l : start lower end upper : H
        L : start upper end lower : h
        5g : alpha numeric stuff : 42
        42 : solution yo everything :
        : start with control c end with dot : .
        , : start with coma end with equals : =
        : start with blank end with control char :
-  cat chartypes.txt | grep '[[:blank:]]'$


-  cat chartypes.txt | grep '[[:space:]]'
	hello : alphabetical stuff :5g
	l : start lower end upper : H
	L : start upper end lower : h
	5g : alpha numeric stuff : 42
	42 : solution yo everything :
	: start with control c end with dot : .
	, : start with coma end with equals : =
	: start with blank end with control char :
-  cat chartypes.txt | grep '^[[:space:]]'
	: start with control c end with dot : .
	: start with blank end with control char :
-  cat chartypes.txt | grep '[[:space:]]$'
	-  vi chartypes.txt 
-  cat chartypes.txt | grep '[[:space:]]$'
	42 : solution yo everything : 

-  cat chartypes.txt | grep '[[:graph:]]'
	hello : alphabetical stuff :5g
	l : start lower end upper : H
	L : start upper end lower : h
	5g : alpha numeric stuff : 42
	42 : solution yo everything : 
	: start with control c end with dot : .
	, : start with coma end with equals : =
  : start with blank end with control char :
-  cat chartypes.txt | grep '^[[:graph:]]'
	hello : alphabetical stuff :5g
	l : start lower end upper : H
	L : start upper end lower : h
	5g : alpha numeric stuff : 42
	42 : solution yo everything : 
	, : start with coma end with equals : =
-  cat chartypes.txt | grep '[[:graph:]]$'
	hello : alphabetical stuff :5g
	l : start lower end upper : H
	L : start upper end lower : h
	5g : alpha numeric stuff : 42
	: start with control c end with dot : .
	, : start with coma end with equals : =
	: start with blank end with control char :


-  cat chartypes.txt | egrep -v '^$'
		hello : alphabetical stuff :5g
        l : start lower end upper : H
        L : start upper end lower : h
        5g : alpha numeric stuff : 42
        42 : solution yo everything :
        : start with control c end with dot : .

        , : start with coma end with equals : =
        : start with blank end with control char :
-  cat chartypes.txt | egrep '^$'

Aadhar card number contains 12 digits and can look like 123456781234 for example.
Pincodes of cities in India contain 6 digits and that of IITM is 600036.
Phone numbers without the country code or ) prefix for std code are 10 digits.
An example for my office landline is 4422574770 and prefix with ) to dial me in my office
Roll numbers in IIT for regular students are of the pattern MM22B001 where the first two letters correspond
to the Department code, 2 digits for the year of joining, then the program
code character and then a 3 digit number for ther roll number within the class.
URLs can be given these days without the protocol like https://www.iitm.ac.in/
They can be given as just github.com for example.

-  egrep '[[:digit:]]{12}' patterns.txt
	Aadhar card number contains 12 digits and can look like 123456781234 for example.
-  egrep '[[:digit:]]{6}' patterns.txt
	Aadhar card number contains 12 digits and can look like 123456781234 for example.
	Pincodes of cities in India contain 6 digits and that of IITM is 600036.
	An example for my office landline is 4422574770 and prefix with ) to dial me in my office
-  egrep '\b[[:digit:]]{6}\b' patterns.txt
	Pincodes of cities in India contain 6 digits and that of IITM is 600036.


-  egrep '[[:alnum:]]{8}' patterns.txt
	Aadhar card number contains 12 digits and can look like 123456781234 for example.
	Pincodes of cities in India contain 6 digits and that of IITM is 600036.
	An example for my office landline is 4422574770 and prefix with ) to dial me in my office
	Roll numbers in IIT for regular students are of the pattern MM22B001 where the first two letters correspond
	to the Department code, 2 digits for the year of joining, then the program
	code character and then a 3 digit number for ther roll number within the class.
	URLs can be given these days without the protocol like https://www.iitm.ac.in/
-  egrep '\b[[:alnum:]]{8}\b' patterns.txt
	Aadhar card number contains 12 digits and can look like 123456781234 for example.
	Pincodes of cities in India contain 6 digits and that of IITM is 600036.
	An example for my office landline is 4422574770 and prefix with ) to dial me in my office
	Roll numbers in IIT for regular students are of the pattern MM22B001 where the first two letters correspond
	URLs can be given these days without the protocol like https://www.iitm.ac.in/


- egrep '\b[[:alpha:]]{2}[[:digit:]]{2}[[:alpha:]][[:di
	git:]]{3}\b' patterns.txt
	Roll numbers in IIT for regular students are of the pattern MM22B001 where the first two letters correspond
- egrep '\b[[:alnum:]]+\.[[:alnum:]]+\b' patterns.txt
	URLs can be given these days without the protocol like https://www.iitm.ac.in/
	They can be given as just github.com for example.

- cat fields.txt
	1234;hello world,line-1
	234567;welcome cmdline,line-2
	3456;parse text,line-3

 -  cat fields.txt | cut -d " " -f 1
	1234;hello
	234567;welcome
	3456;parse
-  cat fields.txt | cut -d " " -f 2
	world,line-1
	cmdline,line-2
	text,line-3
-  cat fields.txt | cut -d " " -f 1-2
	234;hello world,line-1
	34567;welcome cmdline,line-2
	456;parse text,line-3

-  cat fields.txt | cut -d " " -f 1
	1234;hello
	234567;welcome
	3456;parse
-  cat fields.txt | cut -d " " -f 2
	world,line-1
	cmdline,line-2
	text,line-3
-  cat fields.txt | cut -d ";" -f 1
	1234
	234567
	3456
-  cat fields.txt | cut -d ";" -f 2
	hello world,line-1
	welcome cmdline,line-2
	parse text,line-3

-  cat fields.txt | cut -d ";" -f 2 | cut -d "," -f 1
	hello world
	welcome cmdline
	parse text
-  cat fields.txt | egrep ';.*,'
	1234;hello world,line-1
	234567;welcome cmdline,line-2
	3456;parse text,line-3
-  cat fields.txt | cut -d ";" -f 2 | cut -d "," -f 1
	hello world
	welcome cmdline
	parse text
-  cat fields.txt | cut -d ";" -f 2 | cut -d "," -f 1 | head -n 2 | tail -n 1
	welcome cmdline


### week 5 ###
### w5-lec 1 ### https://www.youtube.com/watch?v=pPRge8Yxbso&t=4s ###

from ppt echo
ppt- frequently used
ppt - special var
ppt - process control
ppt - exit codes
ppt - flag set

bash: man: command not found
-  echo hello world            /* displat line test */
		hello world
-  echo hello                        world    /* does not take the space */
		hello world
-  echo "hello               world"          /* take space when inside double quote */
		hello               world
-  echo "hello       world'                  /* wait for same closing quote */
		> some more input
		> closing single quote'
		> closing double quote"
		
		hello       world'
		some more input
		closing single quote'
		closing double quote

/* use of echo in program */
- echo "------------------------------------------"
- echo "Comments:                  "
- echo now you enter the value of variable x

-  echo $USERNAME
		ubuntu	
-  echo $USER
		ubuntu

-  echo '$USERNAME'              /* single quote not worked */
		$USERNAME
-  echo "User logged into the shell now is : $USER"    /* can be used with other sentence */
        User logged into the shell now is : ubuntu

-  echo $PWD
		/home/ubuntu
 
- echo $HOSTNAME
       icme
- cat /etc/hostname
      icme

-  echo "hostname is $HOSTNAME and user is $USER"
		hostname is tryit and user is ubuntu

-  echo "hostname is \$HOSTNAME and user is $USER"       /* / will not intepretate as env variable */
		hostname is $HOSTNAME and user is ubuntu 

- printenv
- env
- set            /* with function displayed */

- man printenv
- printenv HOME
          /home/gphani
-  date
	  Tue Mar 11 02:28:22 UTC 2025
-  date -R                      /* email date format with , to identify */
	  Tue, 11 Mar 2025 02:28:31 +0000
-  alias date='date -R'
-  alias date                  /* alias date to see the alias format */
	alias date='date -R'
-  date
	Tue, 11 Mar 2025 02:29:06 +0000
-  which date                  /* which - where the file located */
	/usr/bin/date
-  cd /usr/bin          
-  ./date                      /* go to location and execute file will show original format */
	Tue Mar 11 02:30:15 UTC 2025
- \date                        /* \ used to ignore alias */
	Tue Mar 11 02:30:21 UTC 2025

- echo $PATH            /* show all dir where it search for file to execute */

- man ps
-  echo $0
	bash
-  ksh
-  echo $0
	ksh
-  echo $$
	683
-  ps                          /* show process this parent and child*/
    PID TTY          TIME CMD
    683 pts/1    00:00:00 bash
    710 pts/1    00:00:00 ps

-  ps --forest                /* show process this parent and child in readable format*/
    PID TTY          TIME CMD
    683 pts/1    00:00:00 bash
    711 pts/1    00:00:00  \_ ps

-  ps -f                      /* show process this parent and child with PPID*/
UID          PID    PPID  C STIME TTY          TIME CMD
ubuntu       683     682  0 02:27 pts/1    00:00:00 bash -i
ubuntu       714     683  0 02:40 pts/1    00:00:00 ps -f

-  ps -e                     /* show all process */     
    702 ?        00:00:00 kworker/0:1-virtio_vsock
    713 ?        00:00:00 kworker/u192:0-events_unbound
    715 pts/1    00:00:00 ps

-  ps -ef                   /* show all process with PPID*/  

### w5-lec 2 ### https://www.youtube.com/watch?v=QX5XElFRpck ###
ppt - creation, inspection, modification, list...
ppt - create a variable
ppt - exporting a variable
ppt - using variable values
ppt - remove var
ppt - test if var available
ppt - not set
ppt - default value
ppt -  reset value
ppt - list var
ppt - length
ppt - slice
ppt - remove matching pattern
ppt - keep matching
ppt - replace pattern
ppt - replace at start or end
ppt - convert character
ppt - resrticting var
ppt - remove restrictions
ppt - index array
ppt - associative array

- myvar=10
- echo $myvar
       10
- 10myvar=11		/* car cannot start with number start with _ */
	error
- Myvar=11
- echo $Myvar		/* var is case sensitive */
	11
- _var=13
- echo $_var
	13

-  myvar=hello world
		bash: world: command not found
-  echo $?
		127
		
-  myvar="hello world"
-  echo $myvar
		hello world
-  unset myvar
-  echo $myvar

-  true
-  echo $?
	0
-  false
-  echo $?
	1
	
-  [[ -v myvar ]];
-  echo $?
	0
-  unset myvar
-  [[ -v myvar ]];
-  echo $?
	1
 -  echo $myvar			/* myvar does not exits */

-  [[ -z ${myvar+x} ]]		/* check for var */
-  echo $?			/* return 0 if not exists */
	0
-  myvar=10			/* declare var */
-  [[ -z ${myvar+x} ]]
-  echo $?			/* return 1 if exists */
	1
-  myvar=FileName
-  echo $myvar
		FileName
-  echo "$myvar.txt"
		FileName.txt
-  echo "$myvar_.txt"		/* can not identify $myvar_ as variable */	
-  echo "${myvar}_.txt"		/* therefore use {} */
		FileName_.txt

-  myvar=3.14
-  echo $myvar
	3.14
-  bash				/* create child bash */
-  ps --forest
    PID TTY          TIME CMD
    691 pts/1    00:00:00 bash
    705 pts/1    00:00:00  \_ bash
    711 pts/1    00:00:00      \_ ps
-  echo $myvar			/* the var not available in child process */

-  exit
	exit
-  ps --forest
    PID TTY          TIME CMD
    691 pts/1    00:00:00 bash
    712 pts/1    00:00:00  \_ ps
-  echo $myvar
	3.14
-  export myvar=3.14		/* export the var in child process */
-  bash
-  ps --forest
    PID TTY          TIME CMD
    691 pts/1    00:00:00 bash
    714 pts/1    00:00:00  \_ bash
    720 pts/1    00:00:00      \_ ps
-  echo $myvar
	3.14
-  myvar=4.56			/* change export the var available in child process */
-  echo $myvar
	4.56
-  exit
	exit
-  echo $myvar			/* but the var available is not changed in parent process */
	3.14

/* --- export from child process also not change the variable --- */ 

-  export myvar=3.14
-  echo $myvar
	3.14
-  bash
-  ps --forest
    PID TTY          TIME CMD
    691 pts/1    00:00:00 bash
    722 pts/1    00:00:00  \_ bash
    728 pts/1    00:00:00      \_ ps
-  echo $myvar
	3.14
-  export myvar=4.56		/* export from child process */
-  echo $myvar			/* in child process it is change */
	4.56
-  exit
exit
-  ps --forest
    PID TTY          TIME CMD
    691 pts/1    00:00:00 bash
    729 pts/1    00:00:00  \_ ps
-  echo $myvar			/* in parent process it is not changed */	
	3.14
-  mydate=`date`		/* back quote to store date command resuld */
-  echo $mydate
	Wed Mar 12 04:06:39 UTC 2025	/* it is not dynamic */
-  date
	Wed Mar 12 04:06:48 UTC 2025 

-  unset myvar
-  echo $myvar

-  echo ${myvar:-hello}			/* if not present show hello */	
	hello
-  echo ${myvar:-"my var is not set"}	/* if not present show string */	
	my var is not set
-  echo $myvar

-  echo ${myvar:=hello}			/* if not present set the var */	
	hello
-  echo $myvar
	hello
-  echo ${myvar:=HELLO}			/* if already present not set the var */
	hello
-  echo $myvar
	hello
-  unset myvar
-  echo ${myvar:?"my var is not set"}	/* if not present show string but more relatable way */
	bash: myvar: my var is not set
-  myvar=hello
-  echo $myvar
	hello
-  echo ${myvar:+ZZZ}			/* if present set to ZZZ */
	ZZZ
-  echo $myvar				/* NEED TO CHECK LATER */
	ZZZ
-  unset myvar
-  echo $myvar

-  echo ${myvar:-YYY}			/* if not present set to ZZZ */
	YYY
-  echo $myvar  
	YYY


### w5-lec 3 ### https://www.youtube.com/watch?v=R9vnc8AdVUo&t=1s ###
 
/* all varibles show */
- printenv
- env
- echo ${!HI*}         /* all varibles that start with Hi */
       HISTCMD HISTCONTROL HISTFILE HISTFILESIZE HISTSIZE

- mydate=`date`       /* store mydate in mydate variable */
- echo $mydate
        Fri Mar 7 03:31:46 UTC 2025
- echo ${#mydate}    /* # - count no of character in myvar */
        28
- echo $(myvar)      /* if variable is not defines then return 0 */
        0
- myvar=abcdefgh12345678  
- echo ${myvar:3;4}      /* skip first 3 char then 4 char */
        defg
- echo ${myvar:-3:4}      /* from right 3 char from ther 4 char */
        678
- echo ${myvar:-3:2}
      67
- echo ${mydate:0:6}
      Sunday

- date +"%d %B %Y"
      09 January 2022
- echo ${mydate:6:10}
      09 January 2022

- myvar=MyFileName.SomethingElse.jpeg
- echo ${myvar#*.}
     SomethingElse.jpeg 
- echo ${myvar##*.}  
      .jpeg
- echo ${myvar%.*}
      MyFileName.SomethingElse
- echo ${myvar%%.*}
      MyFileName
- echo ${myvar%%.*}.${myvar##*.} 
      MyFileName.jpeg

/* Replace character */
myvar=MyFileName.SomethingElse.jpeg

-  echo $myvar
MyFileName.SomethingElse.jpeg       
-  echo ${myvar/e/E}                  /* change first occurence of e */  
MyFilEName.SomethingElse.jpeg
-  echo ${myvar//e/E}                /* change all occurence of e */
MyFilENamE.SomEthingElsE.jpEg
-  echo ${myvar/#M/m}                /* change if first letter is M */
myFileName.SomethingElse.jpeg
-  echo ${myvar/%g/G}                /* change if last letter is g */
MyFileName.SomethingElse.jpeG
-  echo ${myvar/%jpeg/jpg}
MyFileName.SomethingElse.jpg

- myvar=MyjpegFile.Something.jpeg
- myvar1= 'echo${myvar//jpeg/jpg}`
- echo $myvar1
        MyjpgFile.Something.jpg

-  mydate=`date`
-  echo $mydate
        Sun Mar 9 12:17:29 UTC 2025
-  echo ${mydate,}                   /* , first char change to small */
        sun Mar 9 12:17:29 UTC 2025
-  echo ${mydate,,}                  /* ,, all char change to small */
        sun mar 9 12:17:29 utc 2025
-  myvar=hello                       
-  echo ${myvar^}                    /* ^ first char change to capital */ 
        Hello
-  echo ${myvar^^}                  /* ^^ first char change to capital */ 
        HELLO

-  declare -i mynum                /* only store integers */ 
-  mynum=10
-  echo ${mynum}
        10
-  mynum=hello
-  echo ${mynum}                  /* if assign to other it will store 0 */ 
        0
-  declare -l myvar              /* only store lower case */
-  myvar=hello
-  echo ${myvar}
        hello
-  myvar=ZZDF
-  echo ${myvar}                /* if uppercase stored then it turns into lower case */
      zzdf
-  declare -u MYVAR            /* only store upper case */
-  MYVAR=helllo
-  echo ${myvar}
        zzdf
-  echo ${MYVAR}              
        HELLLO
-  MYVAR=77
-  echo ${MYVAR}
        77
-  MYVAR=77ui                  /* it can store also intiger apart from small case letter */
-  echo ${MYVAR}
        77UI

- declare +u MYVAR            /* remove upper case condition */
- MYVAR="hello, world"
- echo ${MYVAR}
       hello, world

-  today=`date`
-  echo ${today}
        Sun Mar 9 13:23:29 UTC 2025
-  declare -r today                    /* var will be read only */
-  today="hello world"
          bash: today: readonly variable
-  declare +r today                    /* + also can not chage read only var */
          bash: declare: today: readonly variable

-  declare -a arr                    /* declare an array */
-  arr[0]=Sunday
-  arr[1]=Monday
-  echo ${arr[1]}
          Monday
-  arr[100]=LeapYearDay             /* any type of index can be created */
-  echo ${#arr[@]}                  /* shows no of array elements */
        3
-  echo ${!arr[@]}                  /* shows all the indexes */
        0 1 100
-  unset 'arr[100]'                /* remove an array element */
-  echo ${#arr[@]}
        2
-  echo ${!arr[@]}
        0 1
- myfiles=`ls`
- echo ${#myfiles[@]} 
       11
- echo ${myfiles[1]}
       Desktop

### w6-lec 1 ### 
### https://www.youtube.com/watch?v=fNf74ycgD9w&t=1s ###
# Some Command line Utilities #


ppt - productivity
ppt - utilities find, tar,gzip, make
ppt - find
ppt - file packaging
ppt - possibilities
ppt - make
-  man find
	do in ubuntu
-  find $HOME -print
	/home/ubuntu
	/home/ubuntu/.profile
	/home/ubuntu/.bash_logout
	/home/ubuntu/.bashrc
	/home/ubuntu/.hushlogin
-  find $HOME -print | wc -l
	5
-  find $HOME -mtime -2 -print
	/home/ubuntu
	/home/ubuntu/.hushlogin

-  find $HOME -mtime +30 -print			(last 30 days)
	/home/ubuntu/.profile
	/home/ubuntu/.bash_logout
	/home/ubuntu/.bashrc

-  find /usr -type d -name 'man*' -print
	/usr/share/man
	/usr/share/man/it/man5
	/usr/share/man/it/man8
	/usr/share/man/it/man1
	/usr/share/man/man3
	/usr/share/man/man4
	/usr/share/man/man5

-  find /usr -type d -name 'man?' -print	(search only 1 letter after man)
	/usr/share/man/it/man5
	/usr/share/man/it/man8
	/usr/share/man/it/man1
-  find . -size +10M -print
	run in ubuntu
-  find . -size +10M -exec ls -lsh {} \;
	run in ubuntu
- find . -name '*.jpg' -exec ls -sh {} \;	(search for specific file)
	run in ubuntu

-  cp -r /var/log logfiles
	cp: cannot open '/var/log/btmp' for reading: Permission denied
	cp: cannot open '/var/log/journal/d57e6f9165184c87bba9e07df216f9b4/system.journal' for reading: Permission denied
	cp: cannot access '/var/log/private': Permission denied
	cp: cannot access '/var/log/incus': Permission denied
-  cd logfiles/
- /logfiles$ ls
	apt  incus  journal  lastlog  private  wtmp
- /logfiles$ du -sh
	8.1M    .
- /logfiles$ du -LR
	run in ubuntu
- /logfiles$ du -sh logfiles/
	du: cannot access 'logfiles/': No such file or directory
- /logfiles$ cd ..
- du -sh logfiles/
	8.1M    logfiles/
- tar -cvf logfiles.tar logfiles/
	logfiles/
	logfiles/private/
	logfiles/wtmp
	logfiles/lastlog
	logfiles/incus/
	logfiles/journal/
	logfiles/journal/d57e6f9165184c87bba9e07df216f9b4/
	logfiles/journal/d57e6f9165184c87bba9e07df216f9b4/user-1000.journal
	logfiles/apt/
- ls -l	
	total 8204
	drwxr-xr-x 6 ubuntu ubuntu    4096 Mar 24 01:52 logfiles
-rw-rw-r-- 1 ubuntu ubuntu 8396800 Mar 24 01:57 logfiles.tar
- ls -lh
	total 8.1M
	drwxr-xr-x 6 ubuntu ubuntu 4.0K Mar 24 01:52 logfiles
-rw-rw-r-- 1 ubuntu ubuntu 8.1M Mar 24 01:57 logfiles.tar
- gzip logfiles.tar
- ls -lh
	total 20K
	drwxr-xr-x 6 ubuntu ubuntu 4.0K Mar 24 01:52 logfiles
	rw-rw-r-- 1 ubuntu ubuntu  16K Mar 24 01:57 logfiles.tar.gz
-  gunzip logfiles.tar.gz
-  ls -lh
	total 8.1M
	drwxr-xr-x 6 ubuntu ubuntu 4.0K Mar 24 01:52 logfiles
-rw-rw-r-- 1 ubuntu ubuntu 8.1M Mar 24 01:57 logfiles.tar
-  bzip2 logfiles.tar
-  ls -lh
	total 12K
	drwxr-xr-x 6 ubuntu ubuntu 4.0K Mar 24 01:52 logfiles
	rw-rw-r-- 1 ubuntu ubuntu 7.1K Mar 24 01:57 logfiles.tar.bz2
- compress logfiles.tar
	run in ubuntu
-  ls -lsh
	total 8.1M
	4.0K drwxr-xr-x 6 ubuntu ubuntu 4.0K Mar 24 02:07 logfiles
	8.1M -rw-rw-r-- 1 ubuntu ubuntu 8.1M Mar 24 02:07 logfiles.tar
-  rm -rf logfiles
-  ls -lsh
	total 8.1M
	8.1M -rw-rw-r-- 1 ubuntu ubuntu 8.1M Mar 24 02:07 logfiles.tar

-  uncompress logfiles.tar.Z
	run in ubuntu
-  uncompress logfiles.tar
	run in ubuntu
-  tar -xvf logfiles.tar logfiles.tar
	run in ubuntu

- more make.file
	BACKUPDIR=/home/gphani/backup
	DATESTAMP:=$(shell date +"%Y-%m-%d_%H.%M")
	TARBALL=backup_$(DATESTAMP).tar
	
	backup: file1 file2
			@echo "Backing up file1 file2 to $(DATESTAMP)"
			tar -cvf $(TARBALL) file1 file2
			@ls -l $(TARBALL)
			mv $(TARBALL) $(BACKIPDIR)

- mkdir backup
- touch file1
- touch file2
- cp logfiles/
- ls -l logfiles/dmesg
- cp logfiles/dmesg file1 			
- cp logfiles/dmesg file2 			
- make -f make.file backup
- ls -l backup	(only backup when target file are changed)
- make -f make.file backup
	up to date
- ls >> file1
- make -f make.file backup
	
### w6-lec 2 ### 
### https://www.youtube.com/watch?v=YAddHeVpG7I ###
# Overview of shell scripts #

ppt - scripts
ppt - software tools principles
ppt - scripts
ppt - scripts two types
ppt - script location
ppt - bash environment
ppt - output from shell scripts
ppt - input to shell program
ppt - shell scripts arguments
ppt - command substitution
ppt - for do loop
ppt - case statement
ppt - if loop
ppt - conditions
ppt - expressions
ppt - test numeric comparisons
ppt - test string comparisons
ppt - unary file comparisons
ppt - binary file comparisons
ppt - while do file
ppt - until do file
ppt - functions

### w6-lec 3 ### 
### https://www.youtube.com/watch?v=_WdPclVGNNc ###
# Bash Scripts - Part 01 #
-  pwd
	/home/ubuntu
-  vi s1.sh
-  cat s1.sh
	#!/bin/bash
	# s1.sh is my first script
	echo hello world
-  . s1.sh		(. and source do same thing)
	hello world
-  source s1.sh
	hello world


-  vi s1.sh 
-  echo $$
	698
-  ps
    PID TTY          TIME CMD
    698 pts/1    00:00:00 bash
    726 pts/1    00:00:00 ps
-  source s1.sh
	hello world
	the PID of the process running this script is:
	698
-  ./s1.sh
	bash: ./s1.sh: Permission denied		(new shell creatred)
-  ls -l s1.sh
	-rw-rw-r-- 1 ubuntu ubuntu 116 Mar 24 02:52 s1.sh
-  chmod 755 s1.sh
-  ls -l s1.sh
	-rwxr-xr-x 1 ubuntu ubuntu 116 Mar 24 02:52 s1.sh
-  ./s1.sh
	hello world
	the PID of the process running this script is:
	731
-  ps --forest
    PID TTY          TIME CMD
    698 pts/1    00:00:00 bash
    733 pts/1    00:00:00  \_ ps
-  vi s1.sh 
-  cat s1.sh 
	#!/bin/bash
	# s1.sh is my first script
	echo hello world
	echo the PID of the process running this script is:
	echo $$
	ps --forest
-  ./s1.sh
	hello world
	the PID of the process running this script is:
	746
    PID TTY          TIME CMD
    698 pts/1    00:00:00 bash
    746 pts/1    00:00:00  \_ s1.sh
    747 pts/1    00:00:00      \_ ps
-  echo $$
	698
-  vi
-  vi s1.sh 
-  cat s1.sh 
	#!/bin/bash
	# s1.sh is my first script
	echo hello world
	echo the PID of the process running this script is:
	echo $$
	ps --forest
	export myvar=MYVAR
	echo $myvar
-  .s1/sh
	bash: .s1/sh: No such file or directory
-  .s1.sh
	bash: .s1.sh: command not found
-  ./s1.sh
	hello world
	the PID of the process running this script is:
	765
    PID TTY          TIME CMD
    698 pts/1    00:00:00 bash
    765 pts/1    00:00:00  \_ s1.sh
    766 pts/1    00:00:00      \_ ps
	MYVAR
-  echo $myvar

-  source s1.sh 
	hello world
	the PID of the process running this script is:
	698
    PID TTY          TIME CMD
    698 pts/1    00:00:00 bash
    769 pts/1    00:00:00  \_ ps
	MYVAR
-  echo $myvar
	MYVAR
-  vi s1.sh
-  cat s1.sh
	#!/bin/bash
	# s1.sh is my first script
	echo I am invoked as:
	echo $0
-  ./s1.sh
	I am invoked as:
	./s1.sh
-  pwd
	/home/ubuntu
-  ls
	s1.sh
-  cd /usr/bin

- /home/ubuntu/s1.sh
	I am invoked as:
	/home/ubuntu/s1.sh
- cd /usr/bin
-/usr/bin$ ../../home/ubuntu/s1.sh
	I am invoked as:
	../../home/ubuntu/s1.sh
-  cat s1.sh 
	#!/bin/bash
	# s1.sh is my first script
	echo I am invoked as:
	echo $0
	echo NUmber of arguments passed to the script:
	echo $#
	echo First argument passed
	echo $1
	echo Second argument passed
	echo $2
-  ./s1.sh
	I am invoked as:
./s1.sh
	NUmber of arguments passed to the script:
	0
	First argument passed

	Second argument passed

-  ./s1.sh arg1
	I am invoked as:
./s1.sh
	NUmber of arguments passed to the script:
	1
	First argument passed
	arg1
	Second argument passed

-  ./s1.sh arg1 arg2
	I am invoked as:
	./s1.sh
	NUmber of arguments passed to the script:
	2
	First argument passed
	arg1
	Second argument passed
	arg2
-  ./s1.sh file -l
	I am invoked as:
	./s1.sh
	NUmber of arguments passed to the script:
	2
	First argument passed
	file
	Second argument passed
	-l
-  ./s1.sh "arg1 arg2"
	I am invoked as:
	./s1.sh
	NUmber of arguments passed to the script:
	1
	First argument passed
	arg1 arg2
	Second argument passed

-  ./s1.sh arg1 arg2
	I am invoked as:
./s1.sh
	NUmber of arguments passed to the script:
	2
	First argument passed
	arg1
	Second argument passed
	arg2
-  -  vi s1.sh 
-  cat s1.sh 
	#!/bin/bash
	# s1.sh is my first script
	echo I am invoked as:
	echo $0
	echo NUmber of arguments passed to the script:
	echo $#
	echo First argument passed
	echo $1
	echo Second argument passed
	echo $2
	if test $1 = $2
	then 
			echo The two arguments are same
	fi
-  .s1.sh hello hello
	bash: .s1.sh: command not found
-  /.s1.sh hello hello
	bash: /.s1.sh: No such file or directory
-  ./s1.sh hello hello
	I am invoked as:
	./s1.sh
	NUmber of arguments passed to the script:
	2
	First argument passed
	hello
	Second argument passed
	hello
	The two arguments are same
-  ./s1.sh hello ccc
	I am invoked as:
	./s1.sh
	NUmber of arguments passed to the script:
	2
	First argument passed
	hello
	Second argument passed
	ccc
-  vi s1.sh
-  cat s1.sh 
	#!/bin/bash
	# s1.sh is my first script
	echo I am invoked as:
	echo $0
	echo NUmber of arguments passed to the script:
	echo $#
	echo First argument passed
	echo $1
	echo Second argument passed
	echo $2
	#------------------------------------------
	if test $# -lt 2;
	then
			echo Please pass more than or equal to two arguments
	fi
	#--------------------------------------------
-  ./s1.sh hello
	bash: ./s1.sh: Permission denied
-  chmod 755 s1.sh
-  ./s1.sh hello
	I am invoked as:
	./s1.sh
	NUmber of arguments passed to the script:
	1
	First argument passed
	hello
	Second argument passed

	Please pass more than or equal to two arguments
-  ./s1.sh hello world
	I am invoked as:
	./s1.sh
	NUmber of arguments passed to the script:
	2
	First argument passed
	hello
	Second argument passed
	world
-  vi s1.sh 
-  cat s1.sh 
	#!/bin/bash
	# s1.sh is my first script
	echo I am invoked as:
	echo $0
	echo NUmber of arguments passed to the script:
	echo $#
	echo First argument passed
	echo $1
	echo Second argument passed
	echo $2
	#------------------------------------------
	if test $# -ge 2;
	then
			if test $1 = $2;
			then
					echo Please pass more than or equal to two arguments
			fi
	fi
	#--------------------------------------------
-  ./s1.sh hello hello
	I am invoked as:
	./s1.sh
	NUmber of arguments passed to the script:
	2
	First argument passed
	hello
	Second argument passed
	hello
	Please pass more than or equal to two arguments
-  ./s1.sh hello world
	I am invoked as:
	./s1.sh
	NUmber of arguments passed to the script:
	2
	First argument passed
	hello
	Second argument passed
	world
-  ./s1.sh hello 
	I am invoked as:
	./s1.sh
	NUmber of arguments passed to the script:
	1
	First argument passed
	hello
	Second argument passed
-  vi s2.sh
-  cat s2.sh
	#!/bin/bash
	echo use of for loop
	for i in arg1 arg2 arg3
	do
			echo $i
	done
-  chmod 755 s2.sh
-  ./s2.sh
	use of for loop
	arg1
	arg2
	arg3
-  

  






-  vi s
	s1.sh  s2.sh  
-  vi s2.sh
-  cat s2.sh 
	#!/bin/bash
	echo use of for loop
	for i in file_{1..9}
	do
			echo $i
	done
-  ./s2.sh
	use of for loop
	file_1
	file_2
	file_3
	file_4
	file_5
	file_6
	file_7
	file_8
	file_9

-  vi s2.sh
-  cat s2.sh 
	#!/bin/bash
	echo use of for loop
	for i in file_{A..D}{1..9}
	do
			echo $i
	done
-  ./s2.sh
	use of for loop
	file_A1
	file_A2
	file_A3
	file_A4
	file_A5
	file_A6
	file_A7
	file_A8
	file_A9
	file_B1
	file_B2
	file_B3
	file_B4
	file_B5
	file_B6
	file_B7
	file_B8
	file_B9
	file_C1
	file_C2
	file_C3
	file_C4
	file_C5
	file_C6
	file_C7
	file_C8
	file_C9
	file_D1
	file_D2
	file_D3
	file_D4
	file_D5
	file_D6
	file_D7
	file_D8
	file_D9
  
- ./s2.sh | wc -l
	37


-  vi s2.sh 
-  cat s2.sh 
	#!/bin/bash
	echo use of for loop
	for i in $(ls /bin)
	do
			echo $i
	done
-  ./s2.sh
	use of for loop
	[
	aa-enabled
	aa-exec
	aa-features-abi
	addpart
	addr2line
	apt
-  vi s2.sh 
-  cat s2.sh
	#!/bin/bash
	echo use of for loop
	for i in $(ls /bin/z*)
	do
			echo $i
	done
-  ./ s2.sh
	bash: ./: Is a directory
-  ./s2.sh
	use of for loop
	/bin/zcat
	/bin/zcmp
	/bin/zdiff
	/bin/zdump
	/bin/zegrep
	/bin/zfgrep
	/bin/zforce
	/bin/zgrep
	/bin/zipdetails
	/bin/zless
	/bin/zmore
	/bin/znew
	/bin/zstd
	/bin/zstdcat
	/bin/zstdgrep
	/bin/zstdless
	/bin/zstdmt
	/bin/zvol_wait
-  vi s2.sh 
-  cat s2.sh 
	#!/bin/bash
	echo use of for loop
	for i in `ls /bin/z*`		(also can use `` for command)
	do
        echo $i
	done
-  ./s2.sh
	use of for loop
	/bin/zcat
	/bin/zcmp
	/bin/zdiff
	/bin/zdump
	/bin/zegrep
-  cd /bin
-/bin$ file znew
	znew: POSIX shell script, ASCII text executable
-/bin$ file znew | grep "shell script"
	znew: POSIX shell script, ASCII text executable
-/bin$ file zoom
	zoom: cannot open `zoom' (No such file or directory)
-/bin$ file zoom | grep "shell script"
-  vi s1.sh
-  ls -lh
	total 4.0K
-rw-rw-r-- 1 ubuntu ubuntu 150 Mar 24 06:57 s1.sh
-  vi s1.sh
-  cat s1.sh 
	#!/bin/bash
	echo Shell scripts in /bin directory
	for i in $(ls /bin)
	do      
			echo /bin/$i
			file /bin/$i | grep "shell script"
	done 
-  chmod 755 s1.sh
-  ./s1.sh
	Shell scripts in /bin directory
	/bin/[
	/bin/aa-enabled
	/bin/aa-exec
	/bin/aa-features-abi
	/bin/addpart
	/bin/addr2line
	/bin/apt
	/bin/apt-cache
	/bin/apt-cdrom
	/bin/apt-config
	/bin/apt-extracttemplates
-  vi s1.sh
-  cat s1.sh 
	#!/bin/bash
	echo Shell scripts in /bin directory
	for i in $(ls /bin)
	do      
			file /bin/$i | grep "shell script"
	done 
-  ./s1.sh
	Shell scripts in /bin directory
	/bin/apt-key: POSIX shell script, Unicode text, UTF-8 text executable
	/bin/bashbug: POSIX shell script, ASCII text executable
	/bin/bzdiff: POSIX shell script, ASCII text executable
- less .bashrc

### week 3 ###
### w3-lec 2 ### https://www.youtube.com/watch?v=BBh69kH_G_Y ###






ppt - shell programming
ppt - debugging
ppt - combining conditions
ppt - 
-  vi condition-examples.sh
-  chmod 755 condition-examples.sh 
-  cat condition-examples.sh 
	#!/bin/bash
	for i in {1..9}
	do
			echo $i
			if [ $i -le 3 ] || [ $i -ge 7 ]
			then
					echo $i is out of range
			fi
			if [ $i -gt 3 ] && [ $i -lt 7 ]
			then
					echo $i is in the range
			fi
	done
-  ./condition-examples.sh 
	1
	1 is out of range
	2
	2 is out of range
	3
	3 is out of range
	4
	4 is in the range
	5
	5 is in the range
	6
	6 is in the range
	7
	7 is out of range
	8
	8 is out of range
	9
	9 is out of range
ppt - shell arithmetic
ppt - expr command operators - 1
ppt - command operators - 2

 




































